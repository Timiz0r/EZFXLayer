name: Publish package
description: Publishes a new package if it doesn't already exist in the registry
inputs:
  package-path:
    required: true
outputs:
  package-name:
    description: "Package name"
    value: ${{ steps.package-info.outputs.name }}
  package-version:
    description: "Package version"
    value: ${{ steps.package-info.outputs.version }}
runs:
  using: composite
  steps:
    - name: Get package info
      id: package-info
      working-directory: ${{ inputs.package-path }}
      shell: bash --noprofile --norc {0}
      run: |
        package_name="$(node -p "require('./package.json').name")"
        package_version="$(node -p "require('./package.json').version")"
        published_versions="$( \
          npm -j view $package_name versions \
            | jq -c 'if type == "object" and .error.code=="E404" then [] else . end' \
            | jq -c 'if type == "string" then [.] else . end' \
            | jq -c 'if type == "array" then . else error("failed to retrieve published versions") end' \
        )"
        version_exists=$(echo $published_versions | jq -c "any(. == \"$package_version\")")

        echo "name=$package_name" >> $GITHUB_OUTPUT
        echo "version=$package_version" >> $GITHUB_OUTPUT
        echo "published-versions=$published_versions" >> $GITHUB_OUTPUT
        echo "version-exists=$version_exists" >> $GITHUB_OUTPUT

        echo "Package name: $package_name"
        echo "Package version: $package_version"
        echo "Package name: $published_versions"
        echo "Version exists: $version_exists"
    - name: Publish package
      if: "!fromJson(steps.package-info.outputs.version-exists)"
      working-directory: ${{ inputs.package-path }}
      shell: bash
      run: npm publish --loglevel=silly
    - uses: softprops/action-gh-release@v1
      if: "!fromJson(steps.package-info.outputs.version-exists)"
      with:
        tag_name: ${{ steps.package-info.outputs.name }}-${{ steps.package-info.outputs.version }}
        prerelease: ${{ contains(steps.package-info.outputs.version, 'preview') }}
    - shell: bash
      if: success() && !fromJson(steps.package-info.outputs.version-exists)
      run: echo "### Successfully uploaded package" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      if: success() && fromJson(steps.package-info.outputs.version-exists)
      run: echo "### Package upload not required" >> $GITHUB_STEP_SUMMARY
    - shell: bash
      if: failure()
      run: echo "### Failed to uploaded package" >> $GITHUB_STEP_SUMMARY
    - if: always()
      shell: bash
      run: |
        echo "* Package name: ${{ steps.package-info.outputs.name }}" >> $GITHUB_STEP_SUMMARY
        echo "* Package version: ${{ steps.package-info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "* Package versions before upload: ${{ steps.package-info.outputs.published-versions }}" >> $GITHUB_STEP_SUMMARY
        echo "* Version already exists: ${{ steps.package-info.outputs.version-exists }}" >> $GITHUB_STEP_SUMMARY
